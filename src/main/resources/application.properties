## Konstellationen

# Konstellation 1: Keinerlei Cobntgainerisierung
# ==============================================
# spring.datasource.url=jdbc:mysql://$localhost::3306/db_ibm?useSSL=false&createDatabaseIfNotExist=true
# spring.datasource.username=heri
# spring.datasource.password=waldmeister


# Konstellation 2: Frontend ohne docker, Springboot ohne Docker, mySql als separate Docker-Container
# ===================================================================================================
# 
# Aufruf des zugehoe rigen Containers
# docker run -d -p 3306:3306 --name mysqldb -e MYSQL_ROOT_PASSWORD=password -e MYSQL_PORT=3306  -e MYSQL_DATABASE=db_ibm  -e MYSQL_USER=heri -e MYSQL_PASSWORT=waldmeister mysql
#
# WICHTIG: "createDatabaseIfNotExist=true" ==> Database "db_ibm" wird beim MYSql-Container-Start automatisch erzeugt
#
#spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/${MYSQL_DATABASE:db_ibm}?allowPublicKeyRetrieval=true&useSSL=false&createDatabaseIfNotExist=true
#spring.datasource.username=${MYSQL_USER:root}
#spring.datasource.password=${MYSQL_PASSWORD:password}

spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/${MYSQL_DATABASE:db_ibm}?allowPublicKeyRetrieval=true&useSSL=false&createDatabaseIfNotExist=true
spring.datasource.username=${MYSQL_USER:root}
spring.datasource.password=${MYSQL_PASSWORD:password}

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = create

# Logging Parametrisierung
#logging.level.org.springframework=DEBUG
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true

#spring.jpa.properties.hibernate.use_sql_comments=true
#server.servlet.context-path=/springboot-crud-rest
#server.servlet.context-path=/

